{"version":3,"sources":["componentes/AddCategories.js","helpers/GetGifs.js","componentes/GrifItemItem.js","componentes/GifRead.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategories","setCategories","categories","useState","input","setinput","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gif","map","img","id","title","images","downsized_medium","GrifItemItem","className","src","alt","GifRead","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExpertApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAGaA,EAAgB,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,cAA+B,KAAhBC,WAEhBC,mBAAS,KAFuB,mBAEnDC,EAFmD,KAE5CC,EAF4C,KAgB1D,OACI,0BAAMC,SATU,SAACC,GACjBA,EAAEC,iBACCJ,EAAMK,OAAOC,OAAS,IACzBT,GAAc,SAAAU,GAAI,OAAMP,GAAN,mBAAeO,OACjCN,EAAS,OAML,2BACIO,KAAK,OACLC,MAAST,EACTU,SAjBU,SAACP,GACnBF,EAASE,EAAEQ,OAAOF,Y,uBCPbG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAMD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCCPO,EAAe,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACrC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACnB,2BAAIA,KCDJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAAEA,GAAe,IAAD,EACfd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH4B,mBAClCC,EADkC,KAC3BC,EAD2B,KAkBzC,OAZAC,qBAAU,WAELxB,EAAQC,GACPwB,MAAK,SAAAd,GACFY,EAAS,CACLf,KAAKG,EACLU,SAAQ,SAIlB,CAACpB,IAEGqB,EDPwBI,CAAczB,GAAjCa,EATwB,EAS7BN,KAAaa,EATgB,EAShBA,QAGnB,OACI,oCACA,wBAAIJ,UAAU,qCAAqChB,GAElDoB,GAAW,gBAGZ,yBAAKJ,UAAU,aAGPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACAgB,IAAOhB,EAAIC,IACPD,UExBXiB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,yBAFhB,mBAEvBD,EAFuB,KAEXD,EAFW,KAS9B,OACI,6BACI,8CACA,kBAAC,EAAD,CAAeA,cAAeA,IAC9B,6BACA,4BAEQC,EAAWwB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACA0B,IAAO1B,EACPA,SAAUA,UCnBlC4B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.3b2b6fee.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategories = ({setCategories, categories}) => {\r\n\r\n    const [input, setinput] = useState('');\r\n\r\n    const inputonChange = (e) =>{\r\n        setinput(e.target.value);\r\n    }\r\n\r\n    const eventSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(input.trim().length > 2){\r\n        setCategories(cats => [ input,...cats]);\r\n        setinput('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={eventSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value = {input}\r\n                onChange = {inputonChange}\r\n            />\r\n            </form>\r\n    )\r\n}\r\n//validando que mande un componente\r\nAddCategories.propTypes = {\r\n\r\n    setCategories : PropTypes.func.isRequired\r\n\r\n}","\r\nexport const getGifs = async(category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=j3yCqLgyub8kyzQ262RJHfUQEBgTb2CI`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gif = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gif;\r\n}","import React from 'react'\r\n\r\nexport const GrifItemItem = ({id, title, url}) => {\r\n    return (\r\n        <div className='card animate__animated animate__bounce'>\r\n            <img src={url} alt={title} />\r\n             <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GrifItemItem } from './GrifItemItem';\r\n//import { getGifs } from '../helpers/GetGifs';\r\n\r\nexport const GifRead = ({category}) => {\r\n\r\n   /* useEffect(() => {\r\n    getGifs(category).then( img => setImages(img));\r\n    }, [category]);\r\n\r\n    const [images, setImages] = useState([]);\r\n     */   \r\n    \r\n   const {data:images, loading} = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__bounce'>{category}</h3>\r\n\r\n        {loading && 'Cargandoo....'}\r\n\r\n\r\n        <div className='card-grid'>\r\n            {\r\n              \r\n                images.map(img =>(\r\n                    <GrifItemItem\r\n                    key = {img.id} \r\n                    {...img}/>\r\n                ))\r\n                \r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/GetGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n   const [state, setstate] = useState({\r\n       data: [],\r\n       loading: true\r\n   });\r\n\r\n   useEffect(() => {\r\n       \r\n        getGifs(category)\r\n        .then(img =>{\r\n            setstate({\r\n                data:img,\r\n                loading:false\r\n            })\r\n        })\r\n\r\n   }, [category])\r\n\r\n   return state;\r\n}\r\n","//Rafc para crear componnente \r\n\r\nimport React, {useState} from 'react'\r\nimport { AddCategories } from './componentes/AddCategories';\r\nimport { GifRead } from './componentes/GifRead';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Full Metal Alchimist']);\r\n\r\n    /*const eventHandler = () =>{\r\n         //setCategories([...categories, 'Full Metal Alchemist']);\r\n            setCategories(cats => [...cats, 'Full Metal Alchemist']);\r\n    }*/\r\n\r\n    return (\r\n        <div>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategories setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(category  =>(\r\n                        <GifRead \r\n                        key = {category}\r\n                        category={category}\r\n                        />\r\n                        ))\r\n                }\r\n            </ol>\r\n          \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//creando componentes\n//gif expert app\n\n"],"sourceRoot":""}